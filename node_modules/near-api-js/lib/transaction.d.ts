export { stringifyJsonOrBytes, Action, AccessKey, AccessKeyPermission, AddKey, CreateAccount, DeleteAccount, DeleteKey, DeployContract, FullAccessPermission, FunctionCall, FunctionCallPermission, Stake, Transfer, SCHEMA, createTransaction, signTransaction, Signature, SignedTransaction, Transaction, encodeSignedDelegate, encodeDelegateAction, } from '@near-js/transactions';
import { PublicKey } from '@near-js/crypto';
import { AccessKey, stringifyJsonOrBytes } from '@near-js/transactions';
export declare const addKey: (publicKey: PublicKey, accessKey: AccessKey) => import("@near-js/transactions").Action;
export declare const createAccount: () => import("@near-js/transactions").Action;
export declare const deleteAccount: (beneficiaryId: string) => import("@near-js/transactions").Action;
export declare const deleteKey: (publicKey: PublicKey) => import("@near-js/transactions").Action;
export declare const deployContract: (code: Uint8Array) => import("@near-js/transactions").Action;
export declare const fullAccessKey: () => AccessKey;
export declare const functionCall: (methodName: string, args: object | Uint8Array, gas: bigint, deposit: bigint, stringify?: typeof stringifyJsonOrBytes, jsContract?: boolean) => import("@near-js/transactions").Action;
export declare const functionCallAccessKey: (receiverId: string, methodNames: string[], allowance?: bigint) => AccessKey;
export declare const stake: (stake: bigint, publicKey: PublicKey) => import("@near-js/transactions").Action;
export declare const transfer: (deposit: bigint) => import("@near-js/transactions").Action;
